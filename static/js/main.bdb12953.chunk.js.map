{"version":3,"sources":["ApiMockData/dummyData.js","Helper/APILayers.js","Components/Modal/Modal.jsx","Components/ProjectAdd/ProjectAdd.jsx","Pages/Projects/Projects.jsx","Helper/Util.js","Components/Common/Chip.jsx","Components/Dropdown/Dropdown.jsx","Components/CustomInput/CustomInput.jsx","Components/Card/CardInfo/CardInfo.jsx","Components/Card/Card.jsx","Components/Board/Board.jsx","Pages/Dashboard/Dashboard.jsx","App.jsx","index.js"],"names":["ApiMockResponse","id","title","cards","BoardAPI","_classCallCheck","_createClass","key","value","_fetchBoardList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","apiData","BoardList","_localStorage$getItem","localStorageData","wrap","_context","prev","next","localStorage","getItem","JSON","parse","_toConsumableArray","updateLocalStorageBoards","abrupt","stop","_x","apply","arguments","fetchBoardList","_x2","_fetchBoardList2","_callee2","api","_context2","getProjectsList","_getProjectsList","_callee3","_localStorage$getItem2","localStorageDataList","_context3","setProjectsList","_x3","_setProjectsList","_callee4","_localStorage$getItem3","_context4","setItem","stringify","concat","boards","Modal","props","_jsx","className","onClick","onClose","children","event","stopPropagation","ProjectAdd","addProject","_useState","useState","_useState2","_slicedToArray","inputText","setInputText","_jsxs","onSubmit","e","preventDefault","length","type","placeholder","onChange","target","autoFocus","Projects","list","setList","_useState3","_useState4","showModal","setShowModal","fetchData","_fetchData","listData","sent","useEffect","_ref2","name","X","map","elem","NavLink","to","formatDate","date","Date","getDate","getMonth","colorsList","getNumberOfDays","start","date1","currentDate","diffInTime","toISOString","split","getTime","Math","round","Chip","item","removeLabel","style","backgroundColor","color","text","Dropdown","dropdownRef","useRef","handleClick","_dropdownRef$current","current","contains","document","addEventListener","removeEventListener","ref","class","CustomInput","displayClass","editClass","defaultValue","buttonText","onDragEnter","clearComment","isCustomInput","setIsCustomInput","CardInfo","_cardValues$labels","_cardValues$tasks4","card","boardId","updateCard","selectedColor","setSelectedColor","numberComment","setNumberComment","_useState5","_useState6","depthComment","setDepthComment","_useState7","_objectSpread","_useState8","cardValues","setCardValues","label","tempLabels","labels","filter","calculatedPercent","_cardValues$tasks","_cardValues$tasks2","_cardValues$tasks2$fi","_cardValues$tasks3","tasks","completed","calculatePercent","Type","List","desc","Calendar","min","substr","Tag","index","findIndex","CheckSquare","width","defaultChecked","Boolean","updateTask","checked","Trash","tempTasks","removeTask","task","now","random","MessageSquare","comments","Array","depth","Circle","comment","number","filterCard","push","SortedCard","sort","a","b","Card","_tasks$filter","removeCard","onDragEnd","showDropdown","setShowDropdown","_Fragment","draggable","MoreHorizontal","AlignLeft","Clock","Board","_board$cards","_board$cards2","board","addCard","removeBoard","Dashboard","setBoards","useParams","cardId","targetCard","setTargetCard","addCardHandler","boardIndex","tempBoardsList","count","cardIndex","splice","_boards$sourceBoardIn","_boards$sourceBoardIn2","_boards$targetBoardIn","_boards$targetBoardIn2","sourceBoardIndex","sourceCardIndex","targetBoardIndex","targetCardIndex","sourceCard","App","HashRouter","Routes","Route","path","element","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bdb12953.chunk.js","sourcesContent":["\r\n\r\nexport const ApiMockResponse = [\r\n      {\r\n        id: 1651319512266.7095,\r\n        title: \"Queue\",\r\n        cards: [],\r\n      },\r\n      {\r\n        id: 1651319523126.113,\r\n        title: \"Development\",\r\n        cards: [],\r\n      },\r\n      {\r\n        id: 1651319530017.122,\r\n        title: \"Done\",\r\n        cards: [],\r\n      },\r\n]\r\n\r\n","import { ApiMockResponse } from \"../ApiMockData/dummyData\";\r\n\r\n\r\n\r\nexport class BoardAPI {\r\n  async fetchBoardList(id){\r\n    const apiData = ApiMockResponse;\r\n    let BoardList = [];\r\n    if (localStorage.getItem(id)) {\r\n      const localStorageData = JSON.parse(\r\n        localStorage.getItem(id) ?? \"\",\r\n      );\r\n      BoardList = [...localStorageData];\r\n    } else {\r\n      BoardList = [...apiData];\r\n      // setProjectsList(id)\r\n      updateLocalStorageBoards(BoardList, id);\r\n    }\r\n\r\n    return BoardList;\r\n  }\r\n}\r\n\r\n\r\nexport async function fetchBoardList(id) {\r\n  const api = new BoardAPI();\r\n  return api.fetchBoardList(id);\r\n}\r\n\r\nexport async function getProjectsList() {\r\n  if(localStorage.getItem(\"Projects\")){\r\n    const localStorageDataList = JSON.parse(\r\n      localStorage.getItem(\"Projects\") ?? \"\",\r\n    );\r\n    return localStorageDataList\r\n  }\r\n  return [];\r\n}\r\nexport async function setProjectsList(id) {\r\n  if(localStorage.getItem(\"Projects\")){\r\n    const localStorageDataList = JSON.parse(\r\n      localStorage.getItem(\"Projects\") ?? \"\",\r\n    );\r\n    localStorage.setItem(\"Projects\", JSON.stringify([...localStorageDataList, id ]));\r\n  }else{\r\n    localStorage.setItem(\"Projects\", JSON.stringify([id]));\r\n  }\r\n}\r\n\r\nexport function updateLocalStorageBoards(boards, id) {\r\n  localStorage.setItem(id, JSON.stringify(boards));\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Modal.css\";\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <div\r\n      className=\"modal\"\r\n      onClick={() => (props.onClose ? props.onClose() : \"\")}\r\n    >\r\n      <div\r\n        className=\"modal-content custom-scroll\"\r\n        onClick={(event) => event.stopPropagation()}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport './ProjectAdd.css'\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nfunction ProjectAdd(props) {\r\n  const { onClose, addProject } = props;\r\n  const [inputText, setInputText] = useState( \"\");\r\n\r\n  const submission = (e) => {\r\n    e.preventDefault();\r\n    if(inputText.length > 0) addProject(inputText)\r\n  };\r\n\r\n  return (\r\n    <Modal className=\"project-add-modal\" onClose={onClose}>\r\n      <form\r\n        className=\"project-add-modal-form\"\r\n        // className={`custom-input-edit ${editClass ? editClass : \"\"}`}\r\n        onSubmit={submission}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          value={inputText}\r\n          placeholder=\"Name project\"\r\n          onChange={(event) => setInputText(event.target.value)}\r\n          autoFocus\r\n        />\r\n        <div className=\"project-add-modal-footer\">\r\n          <button type=\"submit\">Add project</button>\r\n        </div>\r\n      </form>\r\n    </Modal>);\r\n}\r\n\r\nexport default ProjectAdd;\r\n","import \"./Projects.css\";\r\nimport { X } from \"react-feather\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getProjectsList, setProjectsList } from \"../../Helper/APILayers\";\r\nimport ProjectAdd from \"../../Components/ProjectAdd/ProjectAdd\";\r\n\r\nfunction Projects() {\r\n  const [list, setList] = useState([])\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(async ()=>{\r\n    await fetchData()\r\n  },[])\r\n\r\n  async function fetchData() {\r\n    const listData = await getProjectsList();\r\n    setList(listData);\r\n  }\r\n\r\n  const addProject = async (name) => {\r\n    setList([...list, name])\r\n    await setProjectsList(name)\r\n    setShowModal(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"project\">\r\n      {showModal &&\r\n        <ProjectAdd onClose={()=>setShowModal(false)} addProject={addProject} />\r\n      }\r\n      <div className=\"project-projects-container\">\r\n        <div className=\"project-projects-title\">\r\n          <h1>Projects</h1>\r\n          <X className=\"addIcon\" onClick={()=>setShowModal(true)} />\r\n        </div>\r\n        <div className=\"project-projects-list\">\r\n          {list.map( (elem) => <NavLink\r\n            to={`/${elem}`}\r\n            key={elem}\r\n            className=\"link\"\r\n          >\r\n            {elem}\r\n          </NavLink>)}\r\n          {list.length === 0 && <div>there is no project, click +</div>}\r\n        </div>\r\n      </div>\r\n    </div>);\r\n}\r\n\r\nexport default Projects;\r\n","export const formatDate = (value) => {\r\n  if (!value) return \"\";\r\n  const date = new Date(value);\r\n  if (!date) return \"\";\r\n\r\n  const months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  const day = date.getDate();\r\n  const month = months[date.getMonth()];\r\n  return day + \" \" + month;\r\n};\r\nexport const colorsList = [\r\n  \"#a8193d\",\r\n  \"#4fcc25\",\r\n  \"#1ebffa\",\r\n  \"#8da377\",\r\n  \"#9975bd\",\r\n  \"#cf61a1\",\r\n  \"#240959\",\r\n];\r\n\r\nexport const getNumberOfDays = (start) => {\r\n  const date1 = new Date(start);\r\n  const currentDate = new Date()\r\n  const date2 = new Date(currentDate.toISOString().split('T')[0]);\r\n\r\n  const oneDay = 1000 * 60 * 60 * 24;\r\n\r\n  const diffInTime = date2.getTime() - date1.getTime();\r\n\r\n  const diffInDays = Math.round(diffInTime / oneDay);\r\n\r\n  return diffInDays;\r\n}\r\n","import React from \"react\";\r\nimport { X } from \"react-feather\";\r\n\r\n\r\nexport default function Chip(props) {\r\n  const { item, removeLabel } = props;\r\n  return (\r\n    <label style={{ backgroundColor: item.color, color: \"#fff\" }}>\r\n      {item.text}\r\n      {removeLabel && <X onClick={() => removeLabel(item)} />}\r\n    </label>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nimport \"./Dropdown.css\";\r\n\r\nfunction Dropdown(props) {\r\n  const dropdownRef = useRef();\r\n\r\n  const handleClick = (event) => {\r\n    if (\r\n      dropdownRef &&\r\n      !dropdownRef.current?.contains(event.target) &&\r\n      props.onClose\r\n    )\r\n      props.onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClick);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={dropdownRef}\r\n      className={`dropdown custom-scroll ${props.class ? props.class : \"\"}`}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { X } from \"react-feather\";\r\n\r\nimport \"./CustomInput.css\";\r\n\r\nfunction CustomInput(props) {\r\n  const {\r\n    text,\r\n    id,\r\n    onSubmit,\r\n    displayClass,\r\n    editClass,\r\n    placeholder,\r\n    defaultValue,\r\n    buttonText,\r\n    onDragEnter,\r\n    clearComment\r\n  } = props;\r\n  const [isCustomInput, setIsCustomInput] = useState(false);\r\n  const [inputText, setInputText] = useState(defaultValue || \"\");\r\n\r\n  const submission = (e) => {\r\n    e.preventDefault();\r\n    if (inputText && onSubmit) {\r\n      setInputText(\"\");\r\n      onSubmit(inputText);\r\n    }\r\n    setIsCustomInput(false);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!isCustomInput && clearComment){\r\n      clearComment()\r\n    }\r\n  }, [isCustomInput])\r\n\r\n  return (\r\n    <div className=\"custom-input\"  onDragEnter={() => onDragEnter(id)}>\r\n      {isCustomInput ? (\r\n        <form\r\n          className={`custom-input-edit ${editClass ? editClass : \"\"}`}\r\n          onSubmit={submission}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            value={inputText}\r\n            placeholder={placeholder || text}\r\n            onChange={(event) => setInputText(event.target.value)}\r\n            autoFocus\r\n          />\r\n          <div className=\"custom-input-edit-footer\">\r\n            <button type=\"submit\">{buttonText || \"Add\"}</button>\r\n            <X onClick={() => setIsCustomInput(false)} className=\"closeIcon\" />\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        <p\r\n          className={`custom-input-display ${displayClass ? displayClass : \"\"}`}\r\n          onClick={() => setIsCustomInput(true)}\r\n        >\r\n          {text}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomInput;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Calendar, CheckSquare, Circle, List, MessageSquare, Tag, Trash, Type } from \"react-feather\";\r\nimport { colorsList } from \"../../../Helper/Util\";\r\nimport Modal from \"../../Modal/Modal\";\r\nimport CustomInput from \"../../CustomInput/CustomInput\";\r\n\r\nimport \"./CardInfo.css\";\r\nimport Chip from \"../../Common/Chip\";\r\n\r\nfunction CardInfo(props) {\r\n  const { onClose, card, boardId, updateCard } = props;\r\n  const [selectedColor, setSelectedColor] = useState(\"\");\r\n  const [numberComment, setNumberComment] = useState(0);\r\n  const [depthComment, setDepthComment] = useState(0);\r\n  const [cardValues, setCardValues] = useState({\r\n    ...card,\r\n  });\r\n\r\n  const updateTitle = (value) => {\r\n    setCardValues({ ...cardValues, title: value });\r\n  };\r\n\r\n  const updateDesc = (value) => {\r\n    setCardValues({ ...cardValues, desc: value });\r\n  };\r\n\r\n  const addComment = (value) => {\r\n    if(numberComment === 0 &&  depthComment === 0){\r\n      setCardValues({ ...cardValues, comments: [ ...cardValues.comments, {comment: value, number: cardValues.comments.length + 1, depth: 0 }] });\r\n    }else{\r\n      const cards = [...cardValues.comments]\r\n      const filterCard = cards.map(elem => {\r\n        if (elem.number > numberComment) return {...elem, number: elem.number + 1}\r\n        else return elem\r\n      })\r\n      filterCard.push({comment: value, number: numberComment + 1, depth: depthComment })\r\n      const SortedCard = filterCard.sort( (a, b) => a.number - b.number)\r\n      setCardValues({  ...cardValues, comments: SortedCard })\r\n    }\r\n  };\r\n  const clearComment = (value) => {\r\n    setNumberComment(0)\r\n    setDepthComment(0)\r\n  };\r\n\r\n  const changeCommentAnswer = (number,depth) => {\r\n    setNumberComment(number)\r\n    setDepthComment(depth + 1)\r\n  }\r\n\r\n\r\n\r\n  const addLabel = (label) => {\r\n    const index = cardValues.labels.findIndex(\r\n      (item) => item.text === label.text,\r\n    );\r\n    if (index > -1) return;\r\n\r\n    setSelectedColor(\"\");\r\n    setCardValues({\r\n      ...cardValues,\r\n      labels: [...cardValues.labels, label],\r\n    });\r\n  };\r\n\r\n  const removeLabel = (label) => {\r\n    const tempLabels = cardValues.labels.filter(\r\n      (item) => item.text !== label.text,\r\n    );\r\n\r\n    setCardValues({\r\n      ...cardValues,\r\n      labels: tempLabels,\r\n    });\r\n  };\r\n\r\n  const addTask = (value) => {\r\n    const task = {\r\n      id: Date.now() + Math.random() * 2,\r\n      completed: false,\r\n      text: value,\r\n    };\r\n    setCardValues({\r\n      ...cardValues,\r\n      tasks: [...cardValues.tasks, task],\r\n    });\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    const tasks = [...cardValues.tasks];\r\n\r\n    const tempTasks = tasks.filter((item) => item.id !== id);\r\n    setCardValues({\r\n      ...cardValues,\r\n      tasks: tempTasks,\r\n    });\r\n  };\r\n\r\n  const updateTask = (id, value) => {\r\n    const tasks = [...cardValues.tasks];\r\n\r\n    const index = tasks.findIndex((item) => item.id === id);\r\n    if (index < 0) return;\r\n\r\n    tasks[index].completed = Boolean(value);\r\n\r\n    setCardValues({\r\n      ...cardValues,\r\n      tasks,\r\n    });\r\n  };\r\n\r\n  const calculatePercent = () => {\r\n    if (!cardValues.tasks?.length) return 0;\r\n    const completed = cardValues.tasks?.filter(\r\n      (item) => item.completed,\r\n    )?.length;\r\n    return (completed / cardValues.tasks?.length) * 100;\r\n  };\r\n\r\n  const updateDate = (date) => {\r\n    if (!date) return;\r\n\r\n    setCardValues({\r\n      ...cardValues,\r\n      date,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (updateCard) updateCard(boardId, cardValues.id, cardValues);\r\n  }, [cardValues]);\r\n\r\n  const calculatedPercent = calculatePercent();\r\n\r\n  return (\r\n    <Modal onClose={onClose}>\r\n      <div className=\"cardinfo\">\r\n        <div className=\"cardinfo-box\">\r\n          <div className=\"cardinfo-box-title\">\r\n            <Type />\r\n            <p>Title</p>\r\n          </div>\r\n          <CustomInput\r\n            defaultValue={cardValues.title}\r\n            text={cardValues.title}\r\n            placeholder=\"Enter Title\"\r\n            onSubmit={updateTitle}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"cardinfo-box\">\r\n          <div className=\"cardinfo-box-title\">\r\n            <List />\r\n            <p>Description</p>\r\n          </div>\r\n          <CustomInput\r\n            defaultValue={cardValues.desc}\r\n            text={cardValues.desc || \"Add a Description\"}\r\n            placeholder=\"Enter description\"\r\n            onSubmit={updateDesc}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"cardinfo-box\">\r\n          <div className=\"cardinfo-box-title\">\r\n            <Calendar />\r\n            <p>Date</p>\r\n          </div>\r\n          <input\r\n            type=\"date\"\r\n            defaultValue={cardValues.date}\r\n            min={new Date().toISOString().substr(0, 10)}\r\n            onChange={(event) => updateDate(event.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"cardinfo-box\">\r\n          <div className=\"cardinfo-box-title\">\r\n            <Tag />\r\n            <p>Labels</p>\r\n          </div>\r\n          <div className=\"cardinfo-box-labels\">\r\n            {cardValues.labels?.map((item, index) => (\r\n              <Chip key={index} item={item} removeLabel={removeLabel} />\r\n            ))}\r\n          </div>\r\n          <ul>\r\n            {colorsList.map((item, index) => (\r\n              <li\r\n                key={index}\r\n                style={{ backgroundColor: item }}\r\n                className={selectedColor === item ? \"li-active\" : \"\"}\r\n                onClick={() => setSelectedColor(item)}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <CustomInput\r\n            text=\"Add Label\"\r\n            placeholder=\"Enter label text\"\r\n            onSubmit={(value) =>\r\n              addLabel({ color: selectedColor, text: value })\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <div className=\"cardinfo-box\">\r\n          <div className=\"cardinfo-box-title\">\r\n            <CheckSquare />\r\n            <p>Tasks</p>\r\n          </div>\r\n          <div className=\"cardinfo-box-progress-bar\">\r\n            <div\r\n              className=\"cardinfo-box-progress\"\r\n              style={{\r\n                width: `${calculatedPercent}%`,\r\n                backgroundColor: calculatedPercent === 100 ? \"limegreen\" : \"\",\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"cardinfo-box-task-list\">\r\n            {cardValues.tasks?.map((item) => (\r\n              <div key={item.id} className=\"cardinfo-box-task-checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  defaultChecked={item.completed}\r\n                  onChange={(event) =>\r\n                    updateTask(item.id, event.target.checked)\r\n                  }\r\n                />\r\n                <p className={item.completed ? \"completed\" : \"\"}>{item.text}</p>\r\n                <Trash onClick={() => removeTask(item.id)} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <CustomInput\r\n            text={\"Add a Task\"}\r\n            placeholder=\"Enter task\"\r\n            onSubmit={addTask}\r\n          />\r\n        </div>\r\n        <div className=\"cardinfo-box\">\r\n          <div className=\"cardinfo-box-title\">\r\n            <MessageSquare />\r\n            <p>Comments</p>\r\n          </div>\r\n          <div className=\"cardinfo-box-comments\">\r\n            {cardValues.comments.map(e => <div key={e.number} className=\"item\"><div>{[...Array(e.depth)].map((item, index) => <Circle className=\"circle\" key={index} /> ) }</div><p>{e.comment}</p><span onClick={() => changeCommentAnswer(e.number,e.depth)}>Answer</span></div>)}\r\n          </div>\r\n          <div>\r\n            <CustomInput\r\n              text={depthComment === 0 ? \"Add a Comment\" : \"Answer\"}\r\n              placeholder=\"Enter comment\"\r\n              onSubmit={addComment}\r\n              clearComment={clearComment}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CardInfo;\r\n","import React, { useState } from \"react\";\r\nimport { AlignLeft, CheckSquare, Clock, MoreHorizontal } from \"react-feather\";\r\nimport { formatDate, getNumberOfDays } from \"../../Helper/Util\";\r\nimport Chip from \"../Common/Chip\";\r\nimport Dropdown from \"../Dropdown/Dropdown\";\r\n\r\nimport \"./Card.css\";\r\nimport CardInfo from \"./CardInfo/CardInfo\";\r\n\r\nfunction Card(props) {\r\n  const { card, boardId, removeCard, onDragEnd, onDragEnter, updateCard } =\r\n    props;\r\n  const { id, number,  title, desc, date, tasks, labels } = card;\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <CardInfo\r\n          onClose={() => setShowModal(false)}\r\n          card={card}\r\n          boardId={boardId}\r\n          updateCard={updateCard}\r\n        />\r\n      )}\r\n      <div\r\n        className=\"card\"\r\n        key={card.id}\r\n        draggable\r\n        onDragEnd={() => onDragEnd(boardId, id)}\r\n        onDragEnter={() => onDragEnter(boardId, id)}\r\n        onClick={() => setShowModal(true)}\r\n      >\r\n        <div className=\"card-top\">\r\n          <div className=\"card-top-labels\">\r\n            {labels?.map((item, index) => (\r\n              <Chip key={index} item={item} />\r\n            ))}\r\n          </div>\r\n          <div\r\n            className=\"card-top-more\"\r\n            onClick={(event) => {\r\n              event.stopPropagation();\r\n              setShowDropdown(true);\r\n            }}\r\n          >\r\n            <MoreHorizontal />\r\n            {showDropdown && (\r\n              <Dropdown\r\n                class=\"board-dropdown\"\r\n                onClose={() => setShowDropdown(false)}\r\n              >\r\n                <p onClick={() => removeCard(boardId, id)}>Delete Card</p>\r\n              </Dropdown>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"card-title\">{title} #{number}</div>\r\n        <div>\r\n          <p title={desc}>\r\n            <AlignLeft />\r\n          </p>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          {date && (\r\n            <p className=\"card-footer-item\">\r\n              <Clock className=\"card-footer-icon\" />\r\n              {formatDate(date)} {getNumberOfDays(date) >= 0 && `/ ${getNumberOfDays(date)}`}\r\n            </p>\r\n          )}\r\n          {tasks && tasks?.length > 0 && (\r\n            <p className=\"card-footer-item\">\r\n              <CheckSquare className=\"card-footer-icon\" />\r\n              {tasks?.filter((item) => item.completed)?.length}/{tasks?.length}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport { MoreHorizontal } from \"react-feather\";\r\n\r\nimport Card from \"../Card/Card\";\r\nimport Dropdown from \"../Dropdown/Dropdown\";\r\nimport CustomInput from \"../CustomInput/CustomInput\";\r\n\r\nimport \"./Board.css\";\r\n\r\n\r\nfunction Board(props) {\r\n  const {\r\n    board,\r\n    addCard,\r\n    removeBoard,\r\n    removeCard,\r\n    onDragEnd,\r\n    onDragEnter,\r\n    updateCard,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      <div className=\"board-inner\" key={board?.id}>\r\n        <div className=\"board-header\">\r\n          <p className=\"board-header-title\">\r\n            {board?.title}\r\n            <span>{board?.cards?.length || 0}</span>\r\n          </p>\r\n        </div>\r\n        <div className=\"board-cards custom-scroll\">\r\n          {board?.cards?.map((item) => (\r\n            <Card\r\n              key={item.id}\r\n              card={item}\r\n              boardId={board.id}\r\n              removeCard={removeCard}\r\n              onDragEnter={onDragEnter}\r\n              onDragEnd={onDragEnd}\r\n              updateCard={updateCard}\r\n            />\r\n          ))}\r\n          <CustomInput\r\n            text=\"+ Add Card\"\r\n            placeholder=\"Enter Card Title\"\r\n            displayClass=\"board-add-card\"\r\n            editClass=\"board-add-card-edit\"\r\n            id={board?.id}\r\n            onDragEnter={onDragEnter}\r\n            onSubmit={(value) => addCard(board?.id, value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Board from \"../../Components/Board/Board\";\r\nimport \"./Dashboard.css\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport { fetchBoardList, updateLocalStorageBoards } from \"../../Helper/APILayers\";\r\n\r\nfunction Dashboard() {\r\n  const [boards, setBoards] = useState([]);\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function fetchData() {\r\n    const boards = await fetchBoardList(id);\r\n    setBoards(boards);\r\n  }\r\n  const [targetCard, setTargetCard] = useState({\r\n    boardId: 0,\r\n    cardId: 0,\r\n  });\r\n\r\n  const removeBoard = (boardId) => {\r\n    const boardIndex = boards.findIndex((item) => item.id === boardId);\r\n    if (boardIndex < 0) return;\r\n\r\n    const tempBoardsList = [...boards];\r\n    tempBoardsList.splice(boardIndex, 1);\r\n    setBoards(tempBoardsList);\r\n  };\r\n\r\n  const addCardHandler = (boardId, title) => {\r\n    const boardIndex = boards.findIndex((item) => item.id === boardId);\r\n    if (boardIndex < 0) return;\r\n\r\n    const tempBoardsList = [...boards];\r\n\r\n    let count = 0;\r\n    for (let key in tempBoardsList) {\r\n      count+= tempBoardsList[key].cards.length\r\n    }\r\n\r\n    const currentDate = new Date()\r\n\r\n    tempBoardsList[boardIndex].cards.push({\r\n      id: Date.now() + Math.random() * 2,\r\n      number: count + 1,\r\n      title,\r\n      labels: [],\r\n      date: currentDate.toISOString().split('T')[0],\r\n      tasks: [],\r\n      desc: \"\",\r\n      comments: []\r\n    });\r\n    setBoards(tempBoardsList);\r\n  };\r\n\r\n  const removeCard = (boardId, cardId) => {\r\n    const boardIndex = boards.findIndex((item) => item.id === boardId);\r\n    if (boardIndex < 0) return;\r\n\r\n    const tempBoardsList = [...boards];\r\n    const cards = tempBoardsList[boardIndex].cards;\r\n\r\n    const cardIndex = cards.findIndex((item) => item.id === cardId);\r\n    if (cardIndex < 0) return;\r\n\r\n    cards.splice(cardIndex, 1);\r\n    setBoards(tempBoardsList);\r\n  };\r\n\r\n  const updateCard = (boardId, cardId, card) => {\r\n    const boardIndex = boards.findIndex((item) => item.id === boardId);\r\n    if (boardIndex < 0) return;\r\n\r\n    const tempBoardsList = [...boards];\r\n    const cards = tempBoardsList[boardIndex].cards;\r\n\r\n    const cardIndex = cards.findIndex((item) => item.id === cardId);\r\n    if (cardIndex < 0) return;\r\n\r\n    tempBoardsList[boardIndex].cards[cardIndex] = card;\r\n\r\n    setBoards(tempBoardsList);\r\n  };\r\n\r\n  const onDragEnd = (boardId, cardId) => {\r\n    const sourceBoardIndex = boards.findIndex(\r\n      (item) => item.id === boardId,\r\n    );\r\n    if (sourceBoardIndex < 0) return;\r\n\r\n    const sourceCardIndex = boards[sourceBoardIndex]?.cards?.findIndex(\r\n      (item) => item.id === cardId,\r\n    );\r\n    if (sourceCardIndex < 0) return;\r\n\r\n    const targetBoardIndex = boards.findIndex(\r\n      (item) => item.id === targetCard.boardId,\r\n    );\r\n    if (targetBoardIndex < 0) return;\r\n\r\n    const targetCardIndex = boards[targetBoardIndex]?.cards?.findIndex(\r\n      (item) => item.id === targetCard.cardId,\r\n    );\r\n\r\n    const tempBoardsList = [...boards];\r\n    const sourceCard = tempBoardsList[sourceBoardIndex].cards[sourceCardIndex];\r\n    tempBoardsList[sourceBoardIndex].cards.splice(sourceCardIndex, 1);\r\n    tempBoardsList[targetBoardIndex].cards.splice(\r\n        targetCardIndex,\r\n        0,\r\n        sourceCard,\r\n    );\r\n    setBoards(tempBoardsList);\r\n\r\n\r\n    setTargetCard({\r\n      boardId: 0,\r\n      cardId: 0,\r\n    });\r\n  };\r\n\r\n  const onDragEnter = (boardId, cardId) => {\r\n    if (targetCard.cardId === cardId) return;\r\n    if(cardId){\r\n      setTargetCard({\r\n        boardId: boardId,\r\n        cardId: cardId,\r\n      });\r\n    }else{\r\n      setTargetCard({\r\n        ...targetCard,\r\n        boardId: boardId\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateLocalStorageBoards(boards, id);\r\n  }, [boards]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app-nav\">\r\n        <NavLink to=\"/#\" >Projects</NavLink>\r\n        <span>&nbsp;/ {id}</span>\r\n      </div>\r\n      <div className=\"app-boards-container\">\r\n        <div className=\"app-boards\">\r\n          {boards.map((item) => (\r\n            <Board\r\n              key={item.id}\r\n              board={item}\r\n              addCard={addCardHandler}\r\n              removeBoard={() => removeBoard(item.id)}\r\n              removeCard={removeCard}\r\n              onDragEnd={onDragEnd}\r\n              onDragEnter={onDragEnter}\r\n              updateCard={updateCard}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Route, Routes } from \"react-router\";\r\nimport Projects from \"./Pages/Projects/Projects\";\r\nimport Dashboard from \"./Pages/Dashboard/Dashboard\";\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Routes>\r\n        <Route path=\"/:id\" element={<Dashboard />} />\r\n        <Route path=\"/\" element={<Projects />} />\r\n      </Routes>\r\n    </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}